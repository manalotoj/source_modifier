[
    {
        "json_path": "properties.policyRule.then.details.deployment.properties.template.resources.[1].properties.template.resources.[0].properties.criteria.allOf.[0].query",
        "old_value": "[[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
        "new_value": "[format('let policyThresholdString = \"{0}\"; InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | extend appliedThresholdString = policyThresholdString | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('threshold'))]",
        "file": "./sample_target/Deploy-VM-DataDiskSpace-Alert.json"
    },
    {
        "json_path": "properties.policyRule.then.details.deployment.properties.template.resources.[1].properties.template.resources.[0].properties.description",
        "old_value": "Log Alert for Virtual Machine OSDiskSpace",
        "new_value": "Log Alert for Virtual Machine OSDiskSpace ---AND--- Log Alert for Virtual Machine OSDiskSpace",
        "file": "./sample_target/Deploy-VM-DataDiskSpace-Alert.json"
    },
    {
        "line_number": 312,
        "old_line": "                        \"location\": \"northeurope\",",
        "new_line": "                        \"location\": \"usgovarizona\",",
        "search_text": "northeurope",
        "replace_text": "usgovarizona",
        "occurrences": 1,
        "file": "./sample_target/Deploy-VM-DataDiskSpace-Alert.json"
    }
]